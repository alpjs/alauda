{"version":3,"sources":["../src/js-app.js"],"names":["start","startHistory","redirectUrl","emit","ignoreUrl","url","target","startsWith","includes","getAttribute","init","document","addEventListener","event","ctrlKey","metaKey","element","currentTarget","parentNode","disabled","matches","preventDefault","stopPropagation","confirmMessage","window","confirm","Error"],"mappings":"AAAA;AACA;AACA,SAASA,SAASC,YAAlB,EAAgCC,WAAhC,EAA6CC,IAA7C,QAAyD,WAAzD;;AAEA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;AACrC,SAAOD,IAAIE,UAAJ,CAAe,GAAf,KAAuBF,IAAIG,QAAJ,CAAa,GAAb,CAAvB,IAA6CF,UAAUA,OAAOG,YAAP,CAAoB,QAApB,CAA9D;AACD;;AAED,OAAO,SAASC,IAAT,GAAgB;;AA4CrB,MA3CAC,SAASC,gBAAT,CACE,OADF,EAEE,iBAAS;AACP,UAAIC,MAAMC,OAAN,IAAiBD,MAAME,OAA3B;;AAIA,YAAIC,UAAUL,QAAd;;;AAGA,aAFA,IAAIM,iBAAgBJ,MAAMP,MAE1B,EAAOW,mBAAkBD,OAAzB,EAAkCC,iBAAgBA,eAAcC,UAAd,IAA4BF,OAA9E;AACE;AACA,YAAIC,eAAcE,QAAd,KAA2B,IAA/B,IAIKF,eAAcG,OAAd,CAAsB,qBAAtB,CAJL;;AAQA,gBAAIf,MAAMY,eAAcR,YAAd,CAA2B,MAA3B,KAAsCQ,eAAcR,YAAd,CAA2B,WAA3B,CAAhD;AACA,gBAAIL,UAAUC,GAAV,EAAeY,cAAf,CAAJ,EACE;;AAGFJ,kBAAMQ,cAAN,EAbA,EAcAR,MAAMS,eAAN,EAdA;;;AAgBA,gBAAIC,iBAAiBN,eAAcR,YAAd,CAA2B,sBAA3B,CAArB;AACA,gBAAIc,kBAAkB,CAACC,OAAOC,OAAP,CAAeF,cAAf,CAAvB,EACE,OAAO,KAAP;;AAGF,gBAAIpB,KAAK,UAAL,EAAiBE,GAAjB,MAA0B,KAA9B,EACE,MAAM,IAAIqB,KAAJ,CAAU,qCAAV,CAAN;;AAGF,mBAAO,KAAP;AAzBA;AATF;AAoCD,GAvCH,EAwCE,KAxCF,CA2CA,EAAI,CAACzB,cAAL,EAIE,OADAC,aACA,EAAO,IAAP;AAEH","file":"js-app.js","sourcesContent":["/* global window, document */\n/* eslint no-alert: 0 */\nimport { start as startHistory, redirectUrl, emit } from './history';\n\nexport function ignoreUrl(url, target) {\n  return url.startsWith('#') || url.includes(':') || (target && target.getAttribute('target'));\n}\n\nexport function init() {\n  document.addEventListener(\n    'click',\n    event => {\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n\n      let element = document;\n      let currentTarget = event.target;\n\n      for (; currentTarget !== element; currentTarget = currentTarget.parentNode || element) {\n        // Don't process clicks on disabled elements\n        if (currentTarget.disabled === true) {\n          continue;\n        }\n\n        if (!currentTarget.matches('a[href],[data-href]')) {\n          continue;\n        }\n\n        let url = currentTarget.getAttribute('href') || currentTarget.getAttribute('data-href');\n        if (ignoreUrl(url, currentTarget)) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        let confirmMessage = currentTarget.getAttribute('data-confirm-message');\n        if (confirmMessage && !window.confirm(confirmMessage)) {\n          return false;\n        }\n\n        if (emit('redirect', url) === false) {\n          throw new Error('Missing listener for redirect event');\n        }\n\n        return false;\n      }\n    },\n    false,\n  );\n\n  if (!startHistory()) {\n    // On older browsers, if the hash is different that the url,\n    // loads the new page according to the hash\n    redirectUrl();\n    return true;\n  }\n}\n"]}