{"version":3,"sources":["../src/js-app.js"],"names":["start","startHistory","redirectUrl","emit","ignoreUrl","url","target","startsWith","includes","getAttribute","init","document","addEventListener","event","ctrlKey","metaKey","element","currentTarget","parentNode","disabled","matches","preventDefault","stopPropagation","confirmMessage","window","confirm","Error"],"mappings":"AAAA;AACA;AACA,SAASA,SAASC,YAAlB,EAAgCC,WAAhC,EAA6CC,IAA7C,QAAyD,WAAzD;;AAEA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;AACrC,SAAOD,IAAIE,UAAJ,CAAe,GAAf,KAAuBF,IAAIG,QAAJ,CAAa,GAAb,CAAvB,IAA6CF,UAAUA,OAAOG,YAAP,CAAoB,QAApB,CAA9D;AACD;;AAED,OAAO,SAASC,IAAT,GAAgB;AACrBC,WAASC,gBAAT,CAA0B,OAA1B,EAAmCC,SAAS;AAC1C,QAAIA,MAAMC,OAAN,IAAiBD,MAAME,OAA3B,EAAoC;AAClC;AACD;;AAED,QAAIC,UAAUL,QAAd;AACA,QAAIM,gBAAgBJ,MAAMP,MAA1B;;AAEA,WAAOW,kBAAkBD,OAAzB,EAAkCC,gBAAgBA,cAAcC,UAAd,IAA4BF,OAA9E,EAAuF;AAC/E;AACN,UAAIC,cAAcE,QAAd,KAA2B,IAA/B,EAAqC;AACnC;AACD;;AAED,UAAI,CAACF,cAAcG,OAAd,CAAsB,qBAAtB,CAAL,EAAmD;AACjD;AACD;;AAED,UAAIf,MAAMY,cAAcR,YAAd,CAA2B,MAA3B,KAAsCQ,cAAcR,YAAd,CAA2B,WAA3B,CAAhD;AACA,UAAIL,UAAUC,GAAV,EAAeY,aAAf,CAAJ,EAAmC;AACjC;AACD;;AAEDJ,YAAMQ,cAAN;AACAR,YAAMS,eAAN;;AAEA,UAAIC,iBAAiBN,cAAcR,YAAd,CAA2B,sBAA3B,CAArB;AACA,UAAIc,kBAAkB,CAACC,OAAOC,OAAP,CAAeF,cAAf,CAAvB,EAAuD;AACrD,eAAO,KAAP;AACD;;AAED,UAAIpB,KAAK,UAAL,EAAiBE,GAAjB,MAA0B,KAA9B,EAAqC;AACnC,cAAM,IAAIqB,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,aAAO,KAAP;AACD;AACF,GArCD,EAqCG,KArCH;;AAuCA,MAAI,CAACzB,cAAL,EAAqB;AACnB;AACA;AACAC;AACA,WAAO,IAAP;AACD;AACF","file":"js-app.js","sourcesContent":["/* global window, document */\n/* eslint no-alert: 0 */\nimport { start as startHistory, redirectUrl, emit } from './history';\n\nexport function ignoreUrl(url, target) {\n  return url.startsWith('#') || url.includes(':') || (target && target.getAttribute('target'));\n}\n\nexport function init() {\n  document.addEventListener('click', event => {\n    if (event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    let element = document;\n    let currentTarget = event.target;\n\n    for (; currentTarget !== element; currentTarget = currentTarget.parentNode || element) {\n            // Don't process clicks on disabled elements\n      if (currentTarget.disabled === true) {\n        continue;\n      }\n\n      if (!currentTarget.matches('a[href],[data-href]')) {\n        continue;\n      }\n\n      let url = currentTarget.getAttribute('href') || currentTarget.getAttribute('data-href');\n      if (ignoreUrl(url, currentTarget)) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      let confirmMessage = currentTarget.getAttribute('data-confirm-message');\n      if (confirmMessage && !window.confirm(confirmMessage)) {\n        return false;\n      }\n\n      if (emit('redirect', url) === false) {\n        throw new Error('Missing listener for redirect event');\n      }\n\n      return false;\n    }\n  }, false);\n\n  if (!startHistory()) {\n    // On older browsers, if the hash is different that the url,\n    // loads the new page according to the hash\n    redirectUrl();\n    return true;\n  }\n}\n"]}